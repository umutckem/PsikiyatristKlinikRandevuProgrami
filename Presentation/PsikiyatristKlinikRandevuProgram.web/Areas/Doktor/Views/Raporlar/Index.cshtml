@{
    ViewData["Title"] = "Doktor Paneli";
}

<div class="container">
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <h2>Hoş Geldiniz, @ViewBag.DoktorAdiSoyadi</h2>

    <h3 class="mt-4">Klinik Raporlar</h3>

    @if (ViewBag.Randevular != null && ViewBag.Randevular.Count > 0)
    {
        <div class="table-responsive mt-3">
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <!-- Adjust these columns based on your actual model properties -->
                        <th>ID</th>
                        @if (ViewBag.Randevular[0].GetType().GetProperty("HastaId") != null)
                        {
                            <th>Hasta ID</th>
                        }
                        @if (ViewBag.Randevular[0].GetType().GetProperty("PsikiyatristId") != null)
                        {
                            <th>Psikiyatrist ID</th>
                        }
                        @if (ViewBag.Randevular[0].GetType().GetProperty("Durum") != null)
                        {
                            <th>Durum</th>
                        }
                        @if (ViewBag.Randevular[0].GetType().GetProperty("Tarih") != null)
                        {
                            <th>Tarih</th>
                        }
                        <th>İşlemler</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (dynamic rapor in ViewBag.Randevular)
                    {
                        <tr>
                            <td>@rapor.Id</td>
                            @if (rapor.GetType().GetProperty("HastaId") != null)
                            {
                                <td>@rapor.HastaId.ToString().Substring(0, 8)...</td>
                            }
                            @if (rapor.GetType().GetProperty("PsikiyatristId") != null)
                            {
                                <td>@rapor.PsikiyatristId.ToString().Substring(0, 8)...</td>
                            }
                            @if (rapor.GetType().GetProperty("Durum") != null)
                            {
                                <td>
                                    <span class="badge @GetStatusBadgeClass(rapor.Durum)">
                                        @rapor.Durum
                                    </span>
                                </td>
                            }
                            @if (rapor.GetType().GetProperty("Tarih") != null)
                            {
                                <td>@rapor.Tarih.ToString("dd.MM.yyyy")</td>
                            }
                            <td>
                                <a href="@Url.Action("Details", "KlinikRapor", new { id = rapor.Id })" class="btn btn-info btn-sm">Detay</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="alert alert-info mt-3">
            Henüz rapor bulunmamaktadır.
        </div>
    }
</div>

@functions {
    public string GetStatusBadgeClass(string status)
    {
        switch (status?.ToLower())
        {
            case "tamamlandı":
            case "completed":
                return "badge-success";
            case "iptal":
            case "cancelled":
                return "badge-danger";
            case "beklemede":
            case "pending":
                return "badge-warning";
            default:
                return "badge-secondary";
        }
    }
}

@section Styles {
    <style>
        .table th, .table td {
            vertical-align: middle;
        }

        .badge {
            font-size: 0.9em;
            padding: 0.4em 0.6em;
        }

        .table {
            font-size: 0.9rem;
        }
    </style>
}