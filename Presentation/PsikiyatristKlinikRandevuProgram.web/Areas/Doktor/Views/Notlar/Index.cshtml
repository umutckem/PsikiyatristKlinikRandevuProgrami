@model List<PsikiyatristKlinikRandevuProgrami.Core.Model.Randevu>

@{
    ViewData["Title"] = "Randevularım";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary fw-bold">Randevularım</h2>

    <!-- Hasta Filtreleme -->
    <div class="filter-container mb-4">
        <label for="hastaFilter" class="form-label fw-semibold">Hastaya Göre Filtrele:</label>
        <select id="hastaFilter" class="form-select w-50" style="max-width: 300px;" onchange="filterAppointments()">
            <option value="">Tüm Hastalar</option>
            @foreach (var hasta in Model.Select(r => r.Id).Distinct())
            {
                <option value="@hasta">@hasta</option>
            }
        </select>
    </div>

    <div class="card shadow-sm border-0">
        <div class="card-body p-4">
            <div class="table-responsive">
                <table class="table table-hover table-striped align-middle" id="appointmentTable">
                    <thead class="table-dark">
                        <tr>
                            <th scope="col" class="sortable" onclick="sortTable(0)">Tarih <i class="fas fa-sort"></i></th>
                            <th scope="col" class="sortable" onclick="sortTable(1)">Hasta <i class="fas fa-sort"></i></th>
                            <th scope="col" class="sortable" onclick="sortTable(2)">Durum <i class="fas fa-sort"></i></th>
                            <th scope="col">İşlem</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model == null || !Model.Any())
                        {
                            <tr>
                                <td colspan="4" class="text-center text-muted py-4">Randevu bulunamadı.</td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var r in Model)
                            {
                                <tr data-hasta="@r.Id">
                                    <td>@r.TarihSaat.ToString("dd.MM.yyyy HH:mm")</td>
                                    <td>@(r.Durum ?? "Bilgi Yok")</td>
                                    <td>
                                        <span class="badge @(r.Durum == "Onaylandı" ? "bg-success" : r.Durum == "İptal" ? "bg-danger" : "bg-warning text-dark")">
                                            @r.Durum
                                        </span>
                                    </td>
                                    <td>
                                        <a href="@Url.Action("RaporEkle", "Notlar", new { area = "doktor", randevuId = r.Id })" class="btn btn-primary btn-sm me-2">
                                            <i class="fas fa-file-medical me-1"></i> Rapor Ekle
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Geri Dön Butonu -->
    <div class="text-center mt-4">
        <a href="@Url.Action("Index", "Home", new { area = "Doktor" })" class="btn btn-secondary btn-lg px-4">
            <i class="fas fa-arrow-left me-2"></i> Geri Dön
        </a>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        function sortTable(n) {
            let table = document.querySelector("table"), rows, switching = true, i, x, y, shouldSwitch, dir = "asc", switchcount = 0;
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir === "asc" && x.innerText.toLowerCase() > y.innerText.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    } else if (dir === "desc" && x.innerText.toLowerCase() < y.innerText.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else if (switchcount === 0 && dir === "asc") {
                    dir = "desc";
                    switching = true;
                }
            }
        }

        function filterAppointments() {
            const selectedHasta = document.getElementById('hastaFilter').value;
            const tableRows = document.querySelectorAll('#appointmentTable tr[data-hasta]');
            tableRows.forEach(row => {
                const hasta = row.getAttribute('data-hasta');
                row.style.display = (selectedHasta === '' || hasta === selectedHasta) ? '' : 'none';
            });
        }
    </script>
}


<style>
    body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #f4f7fc;
        color: #1a202c;
    }

    .container {
        max-width: 1200px;
    }

    h2.text-primary {
        color: #2b6cb0 !important;
        font-size: 1.8rem;
        font-weight: 600;
    }

    .card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        background-color: #ffffff;
    }

    .card-body {
        padding: 2rem;
    }

    .table {
        border-radius: 10px;
        overflow: hidden;
        background-color: #ffffff;
    }

        .table thead.table-dark {
            background-color: #2d3748;
        }

        .table th {
            font-weight: 600;
            padding: 1rem;
            text-align: center;
            color: #ffffff;
        }

        .table td {
            vertical-align: middle;
            text-align: center;
            padding: 1rem;
        }

        .table tr:hover {
            background-color: #f7fafc;
        }

    .sortable {
        cursor: pointer;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .sortable:hover {
            background-color: #4a5568 !important;
            color: #ffffff !important;
        }

    .badge {
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
        font-weight: 500;
        border-radius: 20px;
        min-width: 100px;
        display: inline-block;
        text-align: center;
    }

    .bg-success {
        background-color: #38a169 !important;
        color: #ffffff !important;
    }

    .bg-warning {
        background-color: #f6e05e !important;
        color: #1a202c !important;
    }

    .bg-danger {
        background-color: #e53e3e !important;
        color: #ffffff !important;
    }

    .btn-sm {
        padding: 0.5rem 1rem;
        font-size: 0.875rem;
        border-radius: 6px;
        transition: background-color 0.2s ease, transform 0.2s ease;
    }

    .btn-primary {
        background-color: #2b6cb0;
        border-color: #2b6cb0;
    }

        .btn-primary:hover {
            background-color: #2c5282;
            border-color: #2c5282;
            transform: translateY(-1px);
        }

    .filter-container .form-label {
        font-size: 1rem;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    .filter-container .form-select {
        border-radius: 6px;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        border: 1px solid #e2e8f0;
        background-color: #ffffff;
        transition: border-color 0.2s ease;
    }

        .filter-container .form-select:focus {
            border-color: #2b6cb0;
            box-shadow: 0 0 0 0.2rem rgba(43, 108, 176, 0.25);
        }

    .text-muted {
        font-size: 1rem;
        color: #6b7280 !important;
    }

    /* Mobile Responsiveness */
    @@media (max-width: 768px) {
        .container

    {
        padding: 1rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .table {
        font-size: 0.9rem;
    }

        .table th,
        .table td {
            padding: 0.75rem;
        }

    .btn-sm {
        width: 100%;
        margin-bottom: 0.5rem;
        text-align: center;
    }

    .filter-container .form-select {
        width: 100%;
        max-width: none;
    }

    h2.text-primary {
        font-size: 1.5rem;
    }

    }

    @@media (max-width: 576px) {
        .table-responsive

    {
        font-size: 0.85rem;
    }

    .badge {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
        min-width: 80px;
    }

    .btn-sm {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
    }

    }
</style>