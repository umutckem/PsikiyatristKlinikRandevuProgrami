@model PsikiyatristKlinikRandevuProgrami.Core.Model.Randevu

@{
    ViewData["Title"] = "Randevularım";
    var doktorlar = ViewBag.Doktorlar as IEnumerable<dynamic>;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
<script src="~/js/site.js"></script>

<style>
    body {
        background-color: #f4f6f9;
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        line-height: 1.6;
        color: #2d3748;
    }

    .container {
        max-width: 900px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    h2 {
        color: #1a202c;
        margin: 2.5rem 0 1.5rem;
        font-weight: 600;
        font-size: 1.8rem;
        position: relative;
        padding-bottom: 0.5rem;
    }

        h2::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background-color: #3182ce;
            border-radius: 2px;
        }

    .doktor-kart.selected {
        background-color: #e6f3ff;
        border-color: #3182ce;
    }

    .tab-pane label {
        display: block;
        padding: 0.5rem 0.75rem;
        border: 1px solid #ccc;
        border-radius: 8px;
        margin: 0.25rem;
        cursor: pointer;
        transition: all 0.2s ease;
        background-color: #f8f9fa;
    }

        .tab-pane label:hover {
            background-color: #e2e6ea;
        }
</style>

<div class="container mt-4">
    <h2 class="mb-4">Psikiyatrist Listesi</h2>
    @if (doktorlar != null && doktorlar.Any())
    {
        <div class="doktor-listesi row mb-4">
            @foreach (var d in doktorlar)
            {
                <div class="col-md-4">
                    <div class="doktor-kart p-3 border rounded shadow-sm mb-3" data-id="@d.IdentityUserId" onclick="doktorSec(this)">
                        <strong>@d.Ad @d.Soyad</strong><br />
                        <small>ID: @d.IdentityUserId</small>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">Henüz doktor bilgisi bulunmamaktadır.</p>
    }

    <h2 class="mb-4">Randevu Oluştur</h2>
    <form action="/Hasta/Randevular/RandevuOlustur" method="post">
        @Html.AntiForgeryToken()
        <div class="mb-3">
            <label>Psikiyatrist ID</label>
            <input type="text" name="PsikiyatristId" id="psikiyatristIdInput" class="form-control" required readonly />
        </div>
        <div class="mb-3">
            <label>Uygun Randevu Saatini Seçin</label>
            <div id="zamanSlotlari">
                <p class="text-muted">Lütfen önce bir psikiyatrist seçiniz.</p>
            </div>
        </div>
        <div class="mb-3">
            <label>Açıklama</label>
            <textarea name="Aciklama" class="form-control"></textarea>
        </div>
        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-primary">Randevu Oluştur</button>
            <a href="/Hasta" class="btn btn-secondary">Geri Dön</a>
        </div>
    </form>

    <hr />

    <h2 class="mb-4">Mevcut Randevularım</h2>
    @if (ViewBag.Randevular != null && ((List<PsikiyatristKlinikRandevuProgrami.Core.Model.Randevu>)ViewBag.Randevular).Any())
    {
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Tarih</th>
                    <th>Durum</th>
                    <th>Açıklama</th>
                    <th>İşlem</th>
                </tr>
            </thead>
            <tbody id="randevuTableBody">
                @foreach (var item in (List<PsikiyatristKlinikRandevuProgrami.Core.Model.Randevu>)ViewBag.Randevular)
                {
                    <tr data-randevu-id="@item.Id">
                        <td>@item.TarihSaat.ToString("g")</td>
                        <td>@item.Durum</td>
                        <td>@item.Aciklama</td>
                        <td>
                            <form method="post" action="/Hasta/Randevular/RandevuIptalEt" onsubmit="return confirm('Bu randevuyu iptal etmek istediğinizden emin misiniz?');">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn btn-sm btn-danger">İptal Et</button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted" id="noAppointmentsMessage">Henüz bir randevunuz yok.</p>
    }
</div>
<script>
    function doktorSec(element) {
        var id = element.getAttribute('data-id');
        $("input[name='PsikiyatristId']").val(id);
        $('.doktor-kart').removeClass('selected');
        $(element).addClass('selected');

        $.get(`/Hasta/Randevular/GetAvailableSlots?psikiyatristId=${id}`, function (slotsByDay) {
            const container = $('#zamanSlotlari');
            container.empty();

            if (!slotsByDay || Object.keys(slotsByDay).length === 0) {
                container.html('<p class="text-danger">Bu doktor için uygun saat bulunamadı.</p>');
                return;
            }

            let tabs = '<ul class="nav nav-tabs" role="tablist">';
            let content = '<div class="tab-content p-3 border border-top-0 rounded-bottom">';
            let index = 0;

            for (const date in slotsByDay) {
                const tabId = `tab${index}`;
                const activeClass = index === 0 ? 'active' : '';
                const showClass = index === 0 ? 'show active' : '';

                tabs += `
                    <li class="nav-item" role="presentation">
                        <button class="nav-link ${activeClass}" id="${tabId}-tab" data-bs-toggle="tab" data-bs-target="#${tabId}" type="button" role="tab">${date}</button>
                    </li>
                `;

                content += `<div class="tab-pane fade ${showClass}" id="${tabId}" role="tabpanel">`;
                content += '<div class="row">';
                slotsByDay[date].forEach(slot => {
                    content += `
                        <div class="col-md-3 mb-2">
                            <label class="form-check-label w-100">
                                <input type="radio" class="form-check-input" name="TarihSaat" value="${slot.raw}" required />
                                ${slot.label}
                            </label>
                        </div>`;
                });
                content += '</div></div>';

                index++;
            }

            tabs += '</ul>';
            content += '</div>';
            container.append(tabs + content);
        }).fail(() => {
            $('#zamanSlotlari').html('<p class="text-danger">Slotlar yüklenemedi.</p>');
        });
    }

    // SignalR bağlantısı
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/appointmentHub")
        .withAutomaticReconnect()
        .build();

    connection.on("ReceiveApprovalNotification", function (message) {
        alert(message);
        const match = message.match(/RandevuId: (\d+)/);
        if (match) {
            const id = match[1];
            $.get(`/Hasta/Randevular/GetRandevuById?id=${id}`, function (data) {
                const row = $(`#randevuTableBody tr[data-randevu-id='${data.id}']`);
                if (row.length > 0) {
                    row.html(`
                        <td>${data.tarihSaat}</td>
                        <td>${data.durum}</td>
                        <td>${data.aciklama}</td>
                    `);
                } else {
                    const newRow = `
                        <tr data-randevu-id="${data.id}">
                            <td>${data.tarihSaat}</td>
                            <td>${data.durum}</td>
                            <td>${data.aciklama}</td>
                        </tr>`;
                    $('#randevuTableBody').append(newRow);
                    $('#noAppointmentsMessage').hide();
                }
            });
        }
    });

    connection.on("ReceiveDeletionNotification", function (message) {
        alert(message);
        const match = message.match(/RandevuId: (\d+)/);
        if (match) {
            const id = match[1];
            const row = $(`#randevuTableBody tr[data-randevu-id='${id}']`);
            if (row.length > 0) {
                row.remove();
                if ($("#randevuTableBody tr").length === 0) {
                    $("#randevuTableBody").closest("table").replaceWith('<p class="text-muted" id="noAppointmentsMessage">Henüz bir randevunuz yok.</p>');
                }
            }
        }
    });

    connection.start().catch(err => console.error("SignalR bağlantı hatası:", err));
</script>